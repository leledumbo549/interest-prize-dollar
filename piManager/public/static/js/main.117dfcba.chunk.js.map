{"version":3,"sources":["Lib.js","Config.js","Conflux.js","Ethereum.js","Manager.js","Login.js","Home.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["msg","Toastify","text","showToast","ms","Promise","resolve","reject","setTimeout","console","key","val","window","localStorage","getItem","this","delay","setItem","clear","url","open","focus","crosschain","require","ethers","ADDRESS_TOKENSWAPPER","ABI_IERC20","ABI_TOKENSWAPPER","addressCPIUSD","addressCPIUSDV2","addressCALINK","conflux","Error","enable","accounts","address","getUserReceiveWalletEth","shuttleflowAddress","cpiUSD","confluxJS","Contract","abi","cpiUSDv2","caLINK","tokenSwapper","log","balanceOf","balance_cpiUSD","balance_cpiUSDv2","balance_caLINK","allowance","a","toString","BigNumber","from","gte","allowance_cpiUSD_tokenswapper","approve","sendTransaction","txHash","balance","amount","swapToV2","ADDRESS_PIUSD","ADDRESS_LINK","ABI_PIUSDETH","addressPIUSD","addressLINK","ethereum","provider","providers","Web3Provider","signer","getSigner","getAddress","piUSD","LINK","balance_piUSD","balance_LINK","allowance_LINK","tx","wait","hash","receiver","wrap","unwrap","toEther","utils","formatEther","fromEther","parseEther","Manager","busy","data","managerData","tickerBusy","getManagerData","setInterval","ticker","Lib","error","Wallet","start","ethWallet","getData","cfxAddress","stat","ethAddress","stat2","getPiUSDBalance","balance_piUSD_shuttleflow","axios","get","result","json","prizeSymbol","interestAccumulated","spendingRecorded","slotsCount","lastWinner","atokenLocked","atokenBalanceLocked","collateral","deposit","atokenInterest","interestNotSent","atokenInShuttleflow","aLINKinShuttleflow","managerShuttleflowAddress","chance","spendingRecs","hasOwnProperty","push","txTimes","history","winners","i","length","h","winner","prize","sendToConfluxTxs","interestTxs","decorate","observable","instance","Page","props","state","show","login","setState","manager","onLoggedIn","btn","ActivityIndicator","title","type","raised","onPress","View","style","alignItems","textAlign","content","renderLogin","renderAskApproval","padding","React","Component","observer","mintTo","mode","toConflux","mintPiUSDToConflux","mintPiUSDToEth","redeemPiUSD","approveTokenSwap","tokenSwap","form","TextInput","borderWidth","borderColor","onChangeText","txt","value","placeholder","Picker","disabled","selectedValue","onValueChange","itemValue","Item","label","mint","redeem","btns","renderEth","renderCfx","RouterPage","loggedIn","layoutHeight","overflowWrap","target","href","JSON","parse","stringify","rows0","rows1","rows2","sr","map","item","index","Home","Login","flex","backgroundColor","flexDirection","ScrollView","paddingHorizontal","renderRequirements","renderPoolStat","App","landscape","w","Dimensions","width","ww","wh","height","Router","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.117dfcba.chunk.js","sourcesContent":["import Toastify from 'toastify-js';\nimport 'toastify-js/src/toastify.css';\n\nclass Singleton {\n\n  async showToast(msg) {\n    Toastify({\n      text: msg\n    }).showToast();\n  }\n\n  async delay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, ms);\n    })\n  }\n\n  async getLogger() {\n    return console;\n  }\n\n  async getStorageValue(key) {\n    const val = window.localStorage.getItem(key);\n    await this.delay(1000);\n    return val;\n  }\n\n  async setStorageValue(key, val) {\n    window.localStorage.setItem(key, val);\n    await this.delay(1000);\n  }\n\n  async clearStorageValue() {\n    window.localStorage.clear();\n  }\n\n  openUrl(url) {\n    const win = window.open(url, '_blank');\n    win.focus();\n  }\n\n}\n\nexport default new Singleton();\n\n","class Singleton {\n}\n\nexport default new Singleton();\n\n","// const { Conflux } = require('js-conflux-sdk');\nconst crosschain = require('conflux-crosschain');\nconst ethers = require('ethers');\n\n\nconst ADDRESS_CPIUSD = '0x8a1cacfc644a88d371517262d030b06bb43a3a2d'; // on conflux\nconst ADDRESS_CPIUSDV2 = '0x8961A4a15DBE65e742097CCcB87c1863e22e07EC'; // on conflux\nconst ADDRESS_CALINK = '0x86cca06c660ad995d4ecd49be9bbdd8113fdefca'; // on conflux\nconst ADDRESS_TOKENSWAPPER = '0x817F3129c3D8E773025f58e013b7546fe89790C6'; // on conflux\nconst ABI_IERC20 = require('./abi/IERC20.json');\nconst ABI_TOKENSWAPPER = require('./abi/TOKENSWAPPER.json');\n\n// https://gist.github.com/aalu1418/15b87cd559c1f9b19ca945a1a1d4d69e\nconst bridgeUrl = 'http://23.102.224.244:8101';\nconst defiAddress = '0x0000000000000000000000000000000000000000';\n\n// const conflux = new Conflux({\n//   url: 'http://test.confluxrpc.org',\n//   logger: console, // for debug\n// });\n\n// {\n//   reference: '0x35d70a7fcdb1cf4d2b40aba7ae517f81d0f74bf4',\n//   burn_fee: '0',\n//   mint_fee: '0',\n//   wallet_fee: '0',\n//   minimal_mint_value: '1',\n//   symbol: 'cPIUSD',\n//   decimals: 18,\n//   sponsor_value: '10000000000000000000',\n//   is_admin: false,\n//   ctoken: '0x8a1cacfc644a88d371517262d030b06bb43a3a2d'\n// }\n\nfunction toBN(val) {\n  return ethers.BigNumber.from(val);\n}\n\nclass Singleton {\n  addressCPIUSD = ADDRESS_CPIUSD;\n  addressCPIUSDV2 = ADDRESS_CPIUSDV2;\n  addressCALINK = ADDRESS_CALINK;\n\n  async start() {\n    // console.log(confluxJS);\n    if (!window.conflux) throw Error('no wallet');\n\n    const accounts = await conflux.enable();\n    const address = accounts[0];\n    this.address = address;\n\n    const shuttleflowAddress = await crosschain.getUserReceiveWalletEth(\n      address,\n      defiAddress,\n      bridgeUrl\n    );\n\n    this.shuttleflowAddress = shuttleflowAddress;\n\n    // const account = conflux.wallet.addPrivateKey(PRIVATE_KEY);\n    const cpiUSD = confluxJS.Contract({\n      abi: ABI_IERC20,\n      address: ADDRESS_CPIUSD\n    });\n\n    const cpiUSDv2 = confluxJS.Contract({\n      abi: ABI_IERC20,\n      address: ADDRESS_CPIUSDV2\n    });\n\n    const caLINK = confluxJS.Contract({\n      abi: ABI_IERC20,\n      address: ADDRESS_CALINK\n    });\n\n    const tokenSwapper = confluxJS.Contract({\n      abi: ABI_TOKENSWAPPER,\n      address: ADDRESS_TOKENSWAPPER\n    });\n\n    this.cpiUSD = cpiUSD;\n    this.cpiUSDv2 = cpiUSDv2;\n    this.caLINK = caLINK;\n    this.tokenSwapper = tokenSwapper;\n  }\n\n  getAddress() {\n    return this.address;\n  }\n\n  async stat() {\n    if (!this.address) return {};\n    console.log('retrieve conflux wallet stat');\n    const cpiUSD = this.cpiUSD;\n    const cpiUSDv2 = this.cpiUSDv2;\n    const caLINK = this.caLINK;\n    const address = this.address;\n    console.log('get cpiUSD balance..');\n    const balance_cpiUSD = await cpiUSD.balanceOf(address);\n    console.log('get cpiUSDv2 balance..');\n    const balance_cpiUSDv2 = await cpiUSDv2.balanceOf(address);\n    console.log('get caLINK balance..');\n    const balance_caLINK = await caLINK.balanceOf(address);\n\n    let a = await cpiUSD.allowance(address, ADDRESS_TOKENSWAPPER);\n    a = toBN(a.toString());\n    const allowance = a.gte('100000000000000000000000000000000000000000000000000000000000000000000000000000');\n\n    return {\n      balance_cpiUSD: balance_cpiUSD.toString(),\n      balance_cpiUSDv2: balance_cpiUSDv2.toString(),\n      balance_caLINK: balance_caLINK.toString(),\n      allowance_cpiUSD_tokenswapper: allowance\n    }\n  }\n\n  async approve() {\n    const MAX_INT = '115792089237316195423570985008687907853269984665640564039457584007913129639935';\n    const txHash = await this.cpiUSD.approve(ADDRESS_TOKENSWAPPER, MAX_INT).sendTransaction({ from: this.address });\n    return txHash;\n  }\n\n  async swapToV2() {\n    console.log('get cpiUSD balance..');\n    const balance = await this.cpiUSD.balanceOf(this.address);\n    const amount = balance.toString();\n    console.log('swapping ' + amount);\n    const txHash = await this.tokenSwapper.swapToV2(amount).sendTransaction({ from: this.address });\n    return txHash;\n  }\n\n}\n\nexport default new Singleton();\n\n","const ethers = require('ethers');\n\nconst ADDRESS_PIUSD = '0x35d70a7fcdb1cf4d2b40aba7ae517f81d0f74bf4'; // on eth\nconst ADDRESS_LINK = '0xAD5ce863aE3E4E9394Ab43d4ba0D80f419F61789'; // on eth\nconst ABI_IERC20 = require('./abi/IERC20.json');\nconst ABI_PIUSDETH = require('./abi/PIUSDETH.json');\n\n// https://gist.github.com/aalu1418/15b87cd559c1f9b19ca945a1a1d4d69e\n// const bridgeUrl = 'http://23.102.224.244:8101';\n// const defiAddress = '0x0000000000000000000000000000000000000000';\n\nclass Singleton {\n  addressPIUSD = ADDRESS_PIUSD;\n  addressLINK = ADDRESS_LINK;\n\n  async start() {\n    if (!window.ethereum) throw Error('no wallet');\n    await window.ethereum.enable();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    const signer = provider.getSigner();\n    const address = await signer.getAddress();\n\n    const piUSD = new ethers.Contract(ADDRESS_PIUSD, ABI_PIUSDETH, signer);\n    const LINK = new ethers.Contract(ADDRESS_LINK, ABI_IERC20, signer);\n\n    this.address = address;\n    this.piUSD = piUSD;\n    this.LINK = LINK;\n\n  }\n\n  getAddress() {\n    return this.address;\n  }\n\n  async stat() {\n    if (!this.address) return {};\n    const piUSD = this.piUSD;\n    const LINK = this.LINK;\n    const address = this.address;\n    const balance_piUSD = await piUSD.balanceOf(address);\n    const balance_LINK = await LINK.balanceOf(address);\n    const allowance_LINK = await LINK.allowance(address, ADDRESS_PIUSD);\n    const allowance = allowance_LINK.gte('100000000000000000000000000000000000000000000000000000000000000000000000000000');\n\n    return {\n      balance_piUSD: balance_piUSD.toString(),\n      balance_LINK: balance_LINK.toString(),\n      allowance_LINK: allowance\n    }\n  }\n\n  async getPiUSDBalance(address) {\n    const balance = await this.piUSD.balanceOf(address);\n    return balance.toString();\n  }\n\n  async approve() {\n    const MAX_INT = '115792089237316195423570985008687907853269984665640564039457584007913129639935';\n    const tx = await this.LINK.approve(ADDRESS_PIUSD, MAX_INT);\n    await tx.wait();\n    return tx.hash;\n  }\n\n  async wrap(amount, receiver) {\n    console.log({ amount, receiver });\n    const tx = await this.piUSD.wrap(amount, receiver);\n    await tx.wait();\n    return tx.hash;\n  }\n\n  async unwrap(amount) {\n    const tx = await this.piUSD.unwrap(amount);\n    await tx.wait();\n    return tx.hash;\n  }\n\n}\n\nexport default new Singleton();\n\n","import { decorate, observable, action } from \"mobx\";\nimport ethers from 'ethers';\nimport Config from './Config';\nimport moment from 'moment';\nimport axios from 'axios';\nimport Lib from './Lib';\nimport Wallet from './Conflux';\nimport ethWallet from './Ethereum';\n\n// const piManagerUrl = 'http://156.67.218.126:8877/stat';\nconst piManagerUrl = '/stat';\n\nfunction toEther(val) {\n  if (!val) return '0.0';\n  return ethers.utils.formatEther(val);\n}\n\nfunction fromEther(val) {\n  return (ethers.utils.parseEther(val)).toString();\n}\n\nfunction toBN(val) {\n  return ethers.BigNumber.from(val);\n}\n\nclass Manager {\n\n  busy = false;\n  data = {};\n  managerData = {};\n\n  tickerBusy = false;\n\n  constructor() {\n    this.getManagerData();\n\n    setInterval(() => this.ticker(), 1000);\n  }\n\n  async ticker() {\n    if (this.tickerBusy) return;\n    this.tickerBusy = true;\n    try {\n      await this.getManagerData();\n      await Lib.delay(3000);\n    } catch (err) {\n      console.error(err);\n    }\n\n    this.tickerBusy = false;\n  }\n\n  async login() {\n    try {\n      await Wallet.start();\n      await ethWallet.start();\n\n      await this.getData();\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n\n  async getData() {\n    const cfxAddress = Wallet.getAddress();\n    const stat = await Wallet.stat();\n\n    const ethAddress = ethWallet.getAddress();\n    const stat2 = await ethWallet.stat();\n\n    let balance_piUSD_shuttleflow;\n    const shuttleflowAddress = Wallet.shuttleflowAddress;\n    if (shuttleflowAddress) {\n      balance_piUSD_shuttleflow = await ethWallet.getPiUSDBalance(shuttleflowAddress);\n      balance_piUSD_shuttleflow = toEther(balance_piUSD_shuttleflow);\n    }\n\n    const data = {\n      addressCPIUSD: Wallet.addressCPIUSD,\n      addressCPIUSDV2: Wallet.addressCPIUSDV2,\n      addressCALINK: Wallet.addressCALINK,\n      cfxAddress,\n      balance_cpiUSD: toEther(stat.balance_cpiUSD),\n      balance_cpiUSDv2: toEther(stat.balance_cpiUSDv2),\n      balance_caLINK: toEther(stat.balance_caLINK),\n      addressPIUSD: ethWallet.addressPIUSD,\n      addressLINK: ethWallet.addressLINK,\n      ethAddress,\n      balance_piUSD: toEther(stat2.balance_piUSD),\n      balance_LINK: toEther(stat2.balance_LINK),\n      allowance_LINK: stat2.allowance_LINK,\n      balance_piUSD_shuttleflow,\n      shuttleflowAddress,\n      allowance_cpiUSD_tokenswapper: stat.allowance_cpiUSD_tokenswapper\n    }\n    console.log(data);\n    this.data = data;\n  }\n\n  async getManagerData() {\n    try {\n      const result = await axios.get(piManagerUrl);\n      const json = result.data;\n      if (!json.prizeSymbol) throw 'wrong format';\n\n      const interestAccumulated = json.interestAccumulated;\n      const spendingRecorded = json.slotsCount;\n      const lastWinner = json.lastWinner;\n\n      const atokenLocked = json.atokenBalanceLocked;\n      const collateral = json.deposit;\n      const atokenInterest = json.interestNotSent;\n      const atokenInShuttleflow = json.aLINKinShuttleflow;\n      const managerShuttleflowAddress = json.managerShuttleflowAddress;\n\n      const chance = json.chance;\n      const spendingRecs = [];\n      for (let key in chance) {\n        if (chance.hasOwnProperty(key)) {\n          const val = chance[key];\n          spendingRecs.push({ address: key, txTimes: val });\n        }\n      }\n\n      const history = json.history;\n      const winners = [];\n      for (let i = 0; i < history.length; i++) {\n        const h = history[i];\n        if (i == 5) break;\n        winners.push({ txHash: h.txHash, winner: h.winner, prize: h.prize })\n      }\n\n      const sendToConfluxTxs = json.sendToConfluxTxs;\n      const interestTxs = [];\n      for (let i = 0; i < sendToConfluxTxs.length; i++) {\n        const tx = sendToConfluxTxs[i];\n        if (i == 5) break;\n        interestTxs.push({ txHash: tx.txHash, amount: tx.amount })\n      }\n\n      this.managerData = {\n        interestAccumulated,\n        spendingRecorded,\n        lastWinner,\n        atokenLocked,\n        collateral,\n        atokenInterest,\n        atokenInShuttleflow,\n        spendingRecs,\n        winners,\n        interestTxs,\n        managerShuttleflowAddress\n      };\n\n      console.log(this.managerData);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async approve() {\n    const txHash = await ethWallet.approve();\n    return txHash;\n  }\n\n  async mintPiUSDToConflux(amount) {\n    const receiver = Wallet.shuttleflowAddress;\n    const txHash = await ethWallet.wrap(fromEther(amount), receiver);\n    await this.getData();\n    return txHash;\n  }\n\n  async mintPiUSDToEth(amount) {\n    const receiver = ethWallet.getAddress()\n    const txHash = await ethWallet.wrap(fromEther(amount), receiver);\n    await this.getData();\n    return txHash;\n  }\n\n  async redeemPiUSD(amount) {\n    const txHash = await ethWallet.unwrap(fromEther(amount));\n    await this.getData();\n    return txHash;\n  }\n\n  async approveTokenSwap() {\n    const txHash = await Wallet.approve();\n    await this.getData();\n    return txHash;\n  }\n\n  async tokenSwap() {\n    const txHash = await Wallet.swapToV2();\n    await this.getData();\n    return txHash;\n  }\n\n}\n\ndecorate(Manager, {\n  busy: observable,\n  data: observable,\n  managerData: observable,\n});\n\nconst instance = new Manager();\nexport default instance;\n","import React from 'react';\nimport { View, Dimensions, ScrollView, ActivityIndicator } from 'react-native';\nimport { Button, Text, Header } from 'react-native-elements';\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport manager from './Manager';\nimport lib from './Lib';\nimport { observer } from \"mobx-react\";\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy'\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      await this.login();\n    } catch (err) {\n      this.setState({ show: 'login' });\n    }\n  }\n\n  componentWillMount() {\n  }\n\n  async login() {\n    try {\n      // check allowance\n      this.setState({ show: 'busy' });\n      await manager.login();\n      if (!manager.data.allowance_LINK) {\n        return this.setState({ show: 'askApproval' });\n      }\n      this.props.onLoggedIn();\n    } catch (err) {\n      console.error(err);\n      this.setState({ show: 'login' });\n    }\n  }\n\n  async approve() {\n    try {\n      // check allowance\n      const tx = await manager.approve();\n      this.props.onLoggedIn();\n    } catch (err) {\n      console.error(err);\n      this.setState({ show: 'askApproval' });\n    }\n  }\n\n  renderLogin() {\n    let btn = <ActivityIndicator />;\n    if (this.state.show === 'login') btn = (\n      <Button title='CONNECT' type=\"outline\" raised={true} onPress={() => this.login()} />\n    );\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <pre style={{ textAlign: 'center' }}>\n          open this page in chrome<br />\n          and ensure metamask and confluxportal installed\n        </pre>\n        <Text> </Text>\n        {btn}\n      </View>\n    );\n  }\n\n  renderAskApproval() {\n\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <pre style={{ textAlign: 'center' }}>\n          please approve piUSD to spend LINK<br />\n          we use LINK as subtitute stable token like DAI or USDC\n        </pre>\n        <Text> </Text>\n        <Button title='OKAY' type=\"outline\" raised={true} onPress={() => this.approve()} />\n      </View>\n    );\n  }\n\n  render() {\n    let content = this.renderLogin();\n    if (this.state.show === 'askApproval') content = this.renderAskApproval();\n\n    return (\n      <View style={{ padding: 10 }}>\n        {content}\n      </View>\n    );\n  }\n\n}\n\nexport default observer(Page);\n","import React from 'react';\nimport { View, Dimensions, ScrollView, ActivityIndicator, TextInput, Picker } from 'react-native';\nimport { Button, Text, Header } from 'react-native-elements';\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\nimport manager from './Manager';\nimport lib from './Lib';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      mintTo: 'conflux',\n      amount: '',\n      mode: 'mint'\n    };\n  }\n\n  async componentDidMount() {\n  }\n\n  componentWillMount() {\n  }\n\n  async mint() {\n    try {\n      const toConflux = (this.state.mintTo === 'conflux');\n      const amount = this.state.amount;\n      if (toConflux) {\n        await manager.mintPiUSDToConflux(amount);\n      } else {\n        await manager.mintPiUSDToEth(amount);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async redeem() {\n    try {\n      const amount = this.state.amount;\n      await manager.redeemPiUSD(amount);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async approveTokenSwap() {\n    try {\n      await manager.approveTokenSwap();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async tokenSwap() {\n    try {\n      await manager.tokenSwap();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  renderEth() {\n    let disabled = false;\n    const data = manager.data;\n\n    let form;\n    if (this.state.mode === 'mint') {\n      form = (\n        <View>\n          <pre>enter amount LINK to be minted as piUSD</pre>\n          <TextInput\n            style={{ borderWidth: 1, borderColor: 'gainsboro', padding: 10 }}\n            onChangeText={(txt) => this.setState({ amount: txt })}\n            value={this.state.amount}\n            placeholder='ENTER AMOUNT'\n          />\n          <pre style={{ textAlign: 'center' }}>where piUSD to be minted</pre>\n          <Picker\n            style={{ borderWidth: 1, borderColor: 'gainsboro', padding: 10 }}\n            disabled={disabled}\n            selectedValue={this.state.mintTo}\n            onValueChange={(itemValue) => this.setState({ mintTo: itemValue })}\n          >\n            <Picker.Item label={'Conflux Network'} value={'conflux'} />\n            <Picker.Item label={'Ethereum'} value={'ethereum'} />\n          </Picker>\n\n          <Text> </Text>\n          <Button title='MINT' type=\"outline\" raised={true} onPress={() => this.mint()} />\n        </View>\n      );\n    } else {\n      form = (\n        <View>\n          <pre>enter amount piUSD to be redeemed back to LINK</pre>\n          <TextInput\n            style={{ borderWidth: 1, borderColor: 'gainsboro', padding: 10 }}\n            onChangeText={(txt) => this.setState({ amount: txt })}\n            value={this.state.amount}\n            placeholder='ENTER AMOUNT'\n          />\n          <Text> </Text>\n          <Button title='REDEEM' type=\"outline\" raised={true} onPress={() => this.redeem()} />\n        </View>\n      );\n    }\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <pre style={{ textAlign: 'center' }}>\n          ETHEREUM<br />\n          wallet address: {data.ethAddress}<br />\n          LINK balance: {data.balance_LINK}<br />\n          piUSD balance: {data.balance_piUSD}<br />\n          LINK allowance: {data.allowance_LINK ? 'true' : 'false'}<br />\n          shuttleflow address: {data.shuttleflowAddress}<br />\n          piUSD in shuttleflow: {data.balance_piUSD_shuttleflow}<br />\n        </pre>\n        <Text> </Text>\n        <View>\n          <pre style={{ textAlign: 'center' }}>what do you want to do</pre>\n          <Picker\n            style={{ borderWidth: 1, borderColor: 'gainsboro', padding: 10 }}\n            disabled={disabled}\n            selectedValue={this.state.mode}\n            onValueChange={(itemValue) => this.setState({ mode: itemValue })}\n          >\n            <Picker.Item label={'Mint piUSD'} value={'mint'} />\n            <Picker.Item label={'Redeem piUSD'} value={'redeem'} />\n          </Picker>\n        </View>\n        <Text> </Text>\n        {form}\n      </View>\n    );\n  }\n\n  renderCfx() {\n    const data = manager.data;\n    const haveAllowance = data.allowance_cpiUSD_tokenswapper;\n    let btns;\n\n    if (!haveAllowance) {\n      btns = (\n        <View>\n          <Button title='Approve Token Swapper' type=\"outline\" raised={true} onPress={() => this.approveTokenSwap()} />\n        </View>\n      );\n    } else {\n      btns = (\n        <View>\n          <Button title='SWAP cpiUSD to cpiUSDv2' type=\"outline\" raised={true} onPress={() => this.tokenSwap()} />\n        </View>\n      );\n    }\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <pre style={{ textAlign: 'center' }}>\n          CONFLUX<br />\n          wallet address: {data.cfxAddress}<br />\n          caLINK balance: {data.balance_caLINK}<br />\n          cpiUSD balance: {data.balance_cpiUSD}<br />\n          cpiUSDv2 balance: {data.balance_cpiUSDv2}<br />\n        </pre>\n        <Text> </Text>\n        <pre style={{ textAlign: 'center' }}>\n          currently cpiUSD just a generic ERC777 token<br />\n          it must be swapped to cpiUSDv2 to have its spending recorded\n        </pre>\n        <Text> </Text>\n        {btns}\n        <pre style={{ textAlign: 'center' }}>\n          spend cpiUSDv2 to win interest accumulated prize<br />\n          the more you spend the more chance to win\n        </pre>\n      </View>\n    );\n  }\n\n  render() {\n    return (\n      <View style={{ padding: 10 }}>\n        {this.renderEth()}\n        <Text> </Text>\n        <Text> </Text>\n        <Text> </Text>\n        {this.renderCfx()}\n        <Text> </Text>\n        <Text> </Text>\n      </View>\n    );\n  }\n\n}\n\nexport default observer(Page);\n","import React from 'react';\nimport { View, Dimensions, ScrollView } from 'react-native';\nimport { Button, Text, Header } from 'react-native-elements';\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\nimport Lib from './Lib';\nimport manager from './Manager';\nimport Login from './Login';\nimport Home from './Home';\n\nclass RouterPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      layoutHeight: 0\n    };\n  }\n\n  async componentDidMount() {\n    await manager.getData();\n  }\n\n  componentWillMount() {\n  }\n\n  renderRequirements() {\n    const data = manager.data;\n    return (\n      <pre style={{ overflowWrap: 'anywhere' }}>\n        REQUIREMENTS:<br />\n      1. install <a target=\"_blank\" href='https://metamask.io/'>metamask</a> and <a target=\"_blank\" href='https://portal.conflux-chain.org/'>confluxportal</a><br />\n      2. setup them to kovan & conflux testnet<br />\n      3. have eth & cfx testnet from faucet<br />\n      - hint: click deposit on metamask & confluxportal<br />\n      4. have some LINK from <a target=\"_blank\" href='https://testnet.aave.com/faucet'>aave's faucet</a><br />\n      - we will be used LINK as subtitute to USD stable token<br />\n      5. setup metamask to show LINK<br />\n      - LINK address is: {data.addressLINK}<br />\n      - PIUSD address is: {data.addressPIUSD}<br />\n      6. setup confluxportal to show caLINK & PIUSD<br />\n      - caLINK address is: {data.addressCALINK}<br />\n      - PIUSD address is: {data.addressCPIUSDV2}<br />\n      - fyi PIUSD is cpiUSDv2<br />\n      7. on failed tx, tried to increase gas & gas price<br />\n      8. refresh this page if needed<br />\n      </pre>\n    );\n  }\n\n  renderPoolStat() {\n    const data = JSON.parse(JSON.stringify(manager.managerData));\n    console.log(data);\n    const {\n      interestAccumulated,\n      spendingRecorded,\n      lastWinner,\n      atokenLocked,\n      collateral,\n      atokenInterest,\n      atokenInShuttleflow,\n      managerShuttleflowAddress\n    } = data;\n\n    const rows0 = data.spendingRecs ? data.spendingRecs : [];\n    const rows1 = data.winners ? data.winners : [];\n    const rows2 = data.interestTxs ? data.interestTxs : [];\n\n    let sr = null;\n    if (rows0.length > 0) {\n      sr = (\n        <>\n          SPENDING RECORDS:\n          {rows0.map((item, index) => {\n            const txt = JSON.stringify(item);\n            return (\n              <pre>\n                address: {item.address}<br />\n                spend times: {item.txTimes}\n              </pre>\n            )\n          })}\n          <br />\n          <br />\n        </>\n      );\n    }\n\n    return (\n      <pre>\n        PRIZE STATS:<br />\n        prize: {interestAccumulated} cALINK<br />\n        spending records: {spendingRecorded}<br />\n        last winner: {lastWinner}<br />\n        <br />\n        <br />\n        PIUSD ETH STATS:<br />\n        total minted: {collateral} PIUSD<br />\n        collateral: {atokenLocked} ALINK<br />\n        interest ready sent to shuttleflow: {atokenInterest} ALINK<br />\n        stuck in shuttleflow: {atokenInShuttleflow} ALINK<br />\n        manager shuttleflow address: {managerShuttleflowAddress}\n        <br />\n        <br />\n        {sr}\n        LAST 5 WINNERS:<br />\n        most spender in conflux\n        {rows1.map((item, index) => {\n          const txt = JSON.stringify(item);\n          return (\n            <pre>\n              txHash: {item.txHash}<br />\n              winner: {item.winner}<br />\n              prize: {item.prize}\n            </pre>\n          )\n        })}\n        <br />\n        LAST 5 INTEREST TXS:<br />\n        send to conflux via shuttleflow<br />\n        {rows2.map((item, index) => {\n          const txt = JSON.stringify(item);\n          return (\n            <pre>\n              txHash: {item.txHash}<br />\n              amount: {item.amount} ALINK\n            </pre>\n          )\n        })}\n\n      </pre>\n    );\n  }\n\n  render() {\n    let content;\n    if (this.state.loggedIn) content = <Home />;\n    else content = <Login onLoggedIn={() => this.setState({ loggedIn: true })} />;\n    return (\n      <View style={{ flex: 1, backgroundColor: 'white' }}>\n        <View>\n          <pre style={{ textAlign: 'center' }}>** PRIZE INTEREST DOLLAR **<br />\n          hmm maybe i cant sent myself 1 piUSD thousand times to have chance win the prize</pre>\n        </View>\n        <View style={{ flex: 1, flexDirection: 'row' }}>\n          <View style={{ flex: 1 }}>\n            <ScrollView>\n              <View style={{ paddingHorizontal: 20 }}>\n                {content}\n              </View>\n            </ScrollView>\n          </View>\n          <View style={{ flex: 1, backgroundColor: 'gainsboro' }}>\n            <ScrollView>\n              <View style={{ paddingHorizontal: 20 }}>\n                {this.renderRequirements()}\n                {this.renderPoolStat()}\n              </View>\n            </ScrollView>\n          </View>\n\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default observer(RouterPage);\n","import React from 'react';\nimport { View, Dimensions } from 'react-native';\nimport Router from './Router';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      landscape: false,\n      w: Dimensions.get('window').width\n    };\n  }\n\n  async componentDidMount() {\n    const ww = Dimensions.get('window').width;\n    const wh = Dimensions.get('window').height;\n    if (ww > wh) {\n      this.setState({ landscape: true, w: wh });\n    }\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n\n\n    return (\n      <>\n        <style type=\"text/css\">{`\n          @font-face {\n            font-family: 'MaterialIcons';\n            src: url(${require('react-native-vector-icons/Fonts/MaterialIcons.ttf')}) format('truetype');\n          }\n\n          @font-face {\n            font-family: 'FontAwesome';\n            src: url(${require('react-native-vector-icons/Fonts/FontAwesome.ttf')}) format('truetype');\n          }\n        `}</style>\n\n        <View style={{ flex: 1 }}>\n          <View style={{ height: '100vh' }}>\n            <Router />\n          </View>\n        </View>\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}